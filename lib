local AmongusHook = {}

function AmongusHook.new(type, properties)
    local drawing = Drawing.new(type)
    for property, value in pairs(properties) do
        drawing[property] = value
    end
    return drawing
end

function AmongusHook:CreateWindow(options)
    local window = {
        Title = options.Title or "",
        Center = options.Center or false,
        AutoShow = options.AutoShow or false,
        TabPadding = options.TabPadding or 8,
        MenuFadeTime = options.MenuFadeTime or 0.2,
        Tabs = {},
        ActiveTab = nil,
    }

    if window.Center then
        -- Handle centering logic here
    end

    if window.AutoShow then
        -- Handle auto-show logic here
    end

    function window:AddTab(name)
        local tab = {
            Name = name,
            LeftGroupboxes = {},
            RightGroupboxes = {},
        }

        function tab:AddLeftGroupbox(name)
            local groupbox = {
                Name = name,
                Elements = {},
            }

            function groupbox:AddToggle(id, options)
                local toggle = {
                    Text = options.Text,
                    Default = options.Default or false,
                    Tooltip = options.Tooltip,
                    Callback = options.Callback,
                    Value = options.Default or false,
                }

                function toggle:SetValue(value)
                    self.Value = value
                    if self.Callback then
                        self.Callback(value)
                    end
                end

                table.insert(self.Elements, toggle)
                return toggle
            end

            function groupbox:AddSlider(id, options)
                local slider = {
                    Text = options.Text,
                    Default = options.Default or 1,
                    Min = options.Min or 1,
                    Max = options.Max or 100,
                    Rounding = options.Rounding or 0,
                    Compact = options.Compact or false,
                    Callback = options.Callback,
                    Value = options.Default or 1,
                }

                function slider:SetValue(value)
                    self.Value = value
                    if self.Callback then
                        self.Callback(value)
                    end
                end

                table.insert(self.Elements, slider)
                return slider
            end

            function groupbox:AddLabel(text)
                local label = {
                    Text = text,
                }

                function label:AddColorPicker(id, options)
                    local colorPicker = {
                        Default = options.Default or Color3.new(1, 1, 1),
                        Title = options.Title or "Color",
                        Callback = options.Callback,
                        Value = options.Default or Color3.new(1, 1, 1),
                    }

                    function colorPicker:SetValue(value)
                        self.Value = value
                        if self.Callback then
                            self.Callback(value)
                        end
                    end

                    return colorPicker
                end

                table.insert(self.Elements, label)
                return label
            end

            function groupbox:AddDropdown(id, options)
                local dropdown = {
                    Values = options.Values or {},
                    Default = options.Default or 1,
                    Multi = options.Multi or false,
                    Text = options.Text or "Dropdown",
                    Callback = options.Callback,
                    Value = options.Values[options.Default],
                }

                function dropdown:SetValue(value)
                    self.Value = value
                    if self.Callback then
                        self.Callback(value)
                    end
                end

                table.insert(self.Elements, dropdown)
                return dropdown
            end

            table.insert(self.LeftGroupboxes, groupbox)
            return groupbox
        end

        function tab:AddRightGroupbox(name)
            local groupbox = self:AddLeftGroupbox(name)
            table.insert(self.RightGroupboxes, groupbox)
            return groupbox
        end

        table.insert(self.Tabs, tab)
        return tab
    end

    return window
end

return AmongusHook
