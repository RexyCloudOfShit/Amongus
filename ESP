-- Initialize the Rexy table
local Rexy = {}

-- Default settings
Rexy.ESP = {
    Box = true,
    Name = true,
    Distance = true
}

-- Create a table to store ESP elements
local ESPComponents = {
    Box = false,
    Name = false,
    Distance = false
}

-- Helper functions to draw ESP components
local function drawBox(character)
    local head = character:FindFirstChild("Head")
    if not head then return end

    local pos, onScreen = game.Workspace.CurrentCamera:WorldToScreenPoint(head.Position)
    if onScreen then
        local boxSize = Vector2.new(100, 100)  -- Arbitrary size, adjust as needed
        local boxPos = Vector2.new(pos.X - boxSize.X / 2, pos.Y - boxSize.Y / 2)

        local box = Instance.new("Frame")
        box.Size = UDim2.new(0, boxSize.X, 0, boxSize.Y)
        box.Position = UDim2.new(0, boxPos.X, 0, boxPos.Y)
        box.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        box.Parent = game:GetService("CoreGui")
    end
end

local function drawName(character)
    local head = character:FindFirstChild("Head")
    if not head then return end

    local pos, onScreen = game.Workspace.CurrentCamera:WorldToScreenPoint(head.Position)
    if onScreen then
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Text = character.Name
        nameLabel.Position = UDim2.new(0, pos.X, 0, pos.Y)
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextSize = 14
        nameLabel.BackgroundTransparency = 1
        nameLabel.Parent = game:GetService("CoreGui")
    end
end

local function drawDistance(character, player)
    local head = character:FindFirstChild("Head")
    if not head then return end

    local pos, onScreen = game.Workspace.CurrentCamera:WorldToScreenPoint(head.Position)
    if onScreen then
        local distance = (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
        local distanceLabel = Instance.new("TextLabel")
        distanceLabel.Text = math.floor(distance) .. " studs"
        distanceLabel.Position = UDim2.new(0, pos.X, 0, pos.Y + 20)
        distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        distanceLabel.TextSize = 14
        distanceLabel.BackgroundTransparency = 1
        distanceLabel.Parent = game:GetService("CoreGui")
    end
end

-- The function that runs every frame to update the ESP
local function updateESP()
    local player = game.Players.LocalPlayer
    if not player.Character then return end

    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
        if targetPlayer ~= player and targetPlayer.Character then
            if Rexy.ESP.Box then
                drawBox(targetPlayer.Character)
            end
            if Rexy.ESP.Name then
                drawName(targetPlayer.Character)
            end
            if Rexy.ESP.Distance then
                drawDistance(targetPlayer.Character, player)
            end
        end
    end
end

-- Set up a continuous update loop using RunService
game:GetService("RunService").Heartbeat:Connect(updateESP)

-- Make the ESP components easily toggleable by adding them to the `Rexy.ESP` table
setmetatable(Rexy.ESP, {
    __index = function(_, key)
        -- Default return is false if the key doesn't exist
        return ESPComponents[key] or false
    end,

    __newindex = function(_, key, value)
        -- If a valid key is set (Box, Name, Distance), update the state
        if ESPComponents[key] ~= nil then
            ESPComponents[key] = value
        end
    end
})

-- Return the Rexy library
return Rexy
